/*
 * 
 * Database Regeneration Script
 * Login SQL Injection Database
 */

var path    = require("path"),
    sqlite  = require("sqlite3").verbose(),
    crypto  = require("crypto"),
    casual  = require("casual"),
    config  = require("../config"),
    appConfig = require("../../../config");
    
var constructDatabase = function () {
    var db = new sqlite.Database(
            path.join(appConfig.paths.core,
                config.baseDir, 
                "database",
                ("/" +  config.database + ".db")
            ));

    /*
     * Word Array
     * Purpose:
     *      - Random array of words used to generate usernames and passwords (
     */
    db.serialize(function() {
        // Create Login Table
        db.run("CREATE TABLE if not exists pages (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT NOT NULL, content TEXT NOT NULL, date DATE)");
        // Clear any records
        db.run("DELETE FROM pages WHERE 1=1");

        for(i = 0; i < 10 ; i++) {
            var title   = casual.title,
                page    = casual.sentences(n = 27),
                date    = casual.date(format = 'YYYY-MM-DD');
                    
            var stmt = db.prepare("INSERT INTO pages VALUES(NULL,?,?,?)");
            stmt.run(title, page, date); 
            stmt.finalize();
            
        };
    });
    
    db.each("SELECT * FROM pages", function(err, row) {
        console.log(row.content + " : ) \n\n\n ");
    });
    db.close();
};

function hashPassword (password, salt) {
    var hash = crypto.createHash('sha256');
    hash.update(password);
    hash.update(salt);
    return hash.digest('hex');
};

function generateSalt () {
    return crypto.randomBytes(256);
};


module.exports = constructDatabase;